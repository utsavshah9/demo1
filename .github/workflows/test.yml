name: Site build

# workflow triggers
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  repository_dispatch:
    types:
      - my_custom_event

# Ensures that only one deploy task per branch/environment will run at a time.
concurrency:
  group: ${{ github.ref_name }}
  cancel-in-progress: true

# comment
# build process
jobs:
  pr_commented:
    # This job only runs for pull request comments
    name: PR comment
    # if: ${{ github.event.comment.body == 'create preview' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo Preview created
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Get check run ID
      uses: actions/github-script@v3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          // List check runs for repository
          const checkRuns = await github.checks.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
          })

          // Print check run ID for each check run
          checkRuns.data.forEach(checkRun => {
            console.log(`Check run ID: ${checkRun.id}`)
          })
    - name: Set commit status to pending
      uses: actions/github-script@v3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: context.sha,
            state: 'pending',
            context: 'event listener',
            description: 'Event listener job'
          })

    - name: logs
      run: |
        sleep 10
        echo ${{ github.event.pull_request.base.ref || github.ref_name }}

    - name: Add domain name in comment
      uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `This is a comment`
          })

    - name: Set commit status to success
      uses: actions/github-script@v3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: context.sha,
            state: 'success',
            context: 'event listener',
            description: 'Event listener job completed successfully'
          })      